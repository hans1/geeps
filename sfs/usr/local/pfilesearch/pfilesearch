#!/bin/bash
#pfilesearch - Act on files
#Copyright 2008, 2009, 2010, 2011
#Sigmund Berglund

#------------------------------
#This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation version 2.

#This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. <http://www.gnu.org/licenses/>.
#------------------------------
CURDIR="`pwd`"
export VERSION="1.28"
export PROGPATH=`dirname "$0"`"/"
export WORKDIR=$HOME/.pfilesearch/tmp
mkdir $HOME/.pfilesearch 2> /dev/null
mkdir $WORKDIR 2> /dev/null
echo -e "\c" > $HOME/.pfilesearch/hits
if type gtkdialog4 > /dev/null; then export GTKDIALOG="gtkdialog4"; else export GTKDIALOG="gtkdialog"; fi #puppy specific

search (){
[ "$SEARCHPATHS" = "/  (""$LOC601"")" ] && SEARCHPATHS="/"
if [ "$SEARCHPATHS" = "/" ]; then TMP="$LOC601."; else TMP="$SEARCHPATHS"; fi
#splash
if [ "$BBBACKEND" != "true" ]; then
	echo -e "$LOC500    '$SEARCHSTRING'    $LOC_IN $TMP\n\n\n$LOC602" > $WORKDIR/pfilesearch-splashtext
	echo 0 > $WORKDIR/pfilesearch-splash #reset progress bar
	"$PROGPATH"box_splash &
fi
#---
echo -e "\c" > $WORKDIR/pfilesearch-ext
echo -e "\c" > $HOME/.pfilesearch/hits
#set days fo atime / ctime / mtime
YEAR=`echo "$DATE_FROM" | cut -d "/" -f 3`
if [ $YEAR -lt 1970 ]; then ERROR="$LOC700"; error_dialog; fi
TODAY=`date +%s`; TODAY=`expr $TODAY / 60 / 60 / 24`
TMP=`date -d $DATE_FROM +%s`
TMP2=`expr $TMP / 60 / 60 / 24`
DAYS_FROM1=`expr $TODAY - $TMP2`
TMP=`date -d $DATE_TO +%s`
TMP1=`expr $TMP / 60 / 60 / 24`
TMP2=`expr $TODAY - $TMP1`
DAYS_TO1=`expr $TMP2 - 1`
echo $DATE_TO1
TIME=""
if [ $CHKMTIME = "true" ]; then TIME=" -mtime -$DAYS_FROM1 -mtime +$DAYS_TO1"; fi
if [ $CHKATIME = "true" ]; then TIME=" -atime -$DAYS_FROM1 -atime +$DAYS_TO1"; fi
if [ $CHKCTIME = "true" ]; then TIME=" -ctime -$DAYS_FROM1 -ctime +$DAYS_TO1"; fi
#set permission mode
if [ $CHK_UX = "true" ]; then UX=1; else UX=0; fi 
if [ $CHK_UW = "true" ]; then UW=2; else UW=0; fi 
if [ $CHK_UR = "true" ]; then UR=4; else UR=0; fi 
if [ $CHK_GX = "true" ]; then GX=1; else GX=0; fi 
if [ $CHK_GW = "true" ]; then GW=2; else GW=0; fi 
if [ $CHK_GR = "true" ]; then GR=4; else GR=0; fi 
if [ $CHK_OX = "true" ]; then OX=1; else OX=0; fi 
if [ $CHK_OW = "true" ]; then OW=2; else OW=0; fi 
if [ $CHK_OR = "true" ]; then OR=4; else OR=0; fi 
OWN=`expr $UX + $UW + $UR`
GRP=`expr $GX + $GW + $GR`
OTH=`expr $OX + $OW + $OR`
PERM=""
[ $OWN != 0 ] && PERM="-perm"
[ $GRP != 0 ] && PERM="-perm"
[ $OTH != 0 ] && PERM="-perm"
[ "$PERM" = "-perm" ] && PERM=" -perm $OWN$GRP$OTH"
#prepare variables to search
[ $CHKDOC = "true" ] && echo -e "$EXTDOC \c" >> $WORKDIR/pfilesearch-ext
[ $CHKPIC = "true" ] && echo -e "$EXTPIC \c" >> $WORKDIR/pfilesearch-ext
[ $CHKMUSIC = "true" ] && echo -e "$EXTMUSIC \c" >> $WORKDIR/pfilesearch-ext
[ $CHKVIDEO = "true" ] && echo -e "$EXTVIDEO \c" >> $WORKDIR/pfilesearch-ext
[ $CHKMAIL = "true" ] && echo -e "$EXTMAIL \c" >> $WORKDIR/pfilesearch-ext
[ $CHKZIP = "true" ] && echo -e "$EXTZIP \c" >> $WORKDIR/pfilesearch-ext
[ $CHKCODE = "true" ] && echo -e "$EXTCODE \c" >> $WORKDIR/pfilesearch-ext
EXT=`cat $WORKDIR/pfilesearch-ext | sed -e 's/ ./\\\|\\\./g'`
if [ $CHKEXACT = "false" ]; then SEARCHSTRING2="*$SEARCHSTRING*"; else SEARCHSTRING2="$SEARCHSTRING"; fi
if [ $CHKCASE = "true" ]; then NAME="-name"; GREPCASE=""; else NAME="-iname"; GREPCASE="-i"; fi #case (in)sensitive
if [ $CHKFOLLOW_SYM = "true" ]; then FOLLOW_SYM="-L"; else FOLLOW_SYM="-P"; fi #follow symlink?
[ "$EXCLUDE" ] && EXCLUDE1="-path '$EXCLUDE' -prune -o "
FIND3X="false"
[ $CHKFILE = "true" ] && FIND3X="true" #only if type is specified it will run find 3 times
[ $CHKDIR = "true" ] && FIND3X="true"
[ $CHKSYMLN = "true" ] && FIND3X="true"
if [ $CHKREC = "true" ]; then DEPTH=""; else DEPTH="-maxdepth 1"; fi
if [ $CHKXDEV = "true" ]; then XDEV="-xdev"; else XDEV=""; fi
[ "$USER" != "" ] && USER2=" -user $USER"
[ "$SIZE_GT" != "" ] && SIZE_GT2=" -size +$SIZE_GT"
[ "$SIZE_LT" != "" ] && SIZE_LT2=" -size -$SIZE_LT"
FINDOPTIONS="$DEPTH$PERM$XDEV$TIME$USER2$SIZE_GT2$SIZE_LT2" #optional parameters to find
#Start loop with (all) defined searchpaths
echo "$SEARCHPATHS" | sed -e "s/\[OR\]/\n/g" > $WORKDIR/pfilesearch-SEARCHPATHS
while read SEARCHPATH; do
	case $SEARCHPATH in './') SEARCHPATH="$CURDIR"; esac
	echo -n "find $FOLLOW_SYM \"$SEARCHPATH\" $EXCLUDE1 $FINDOPTIONS $NAME \"$SEARCHSTRING2\" " > $WORKDIR/pfilesearch-execfind #default find
	echo -n "grep $GREPCASE -l '$SEARCHSTRING' "'"$TMP2"'" " > $WORKDIR/pfilesearch-execgrep #build default grep
	#====== Building find-command ======
	#[OR]
	TMP=`echo "$SEARCHSTRING2" | grep -o "\[OR\]"` #Check if [OR] is used
	if [ "$TMP" ]; then
		TMP=`echo "$SEARCHSTRING2" | sed -e "s/\ \[/\[/g" | sed -e "s/\]\ /\]/g" | sed -e "s/\[OR\]/\|/g"` #cut -d syntax
		if [ $CHKEXACT = "false" ]; then TMP=`echo "$TMP" | sed -e 's/|/*|*/g'`; fi
		STR1=`echo "$TMP" | cut -d "|" -f 1`
		FIND1="$FINDOPTIONS $NAME \"$STR1\""
		GREP1=`echo "$STR1"`
		STR2=`echo "$TMP" | cut -d "|" -f 2`
		if [ "$STR2" ]; then
			FIND2="-o $FINDOPTIONS $NAME \"$STR2\""
			GREP2=`echo '|'"$STR2"`
		fi
		STR3=`echo "$TMP" | cut -d "|" -f 3`
		if [ "$STR3" ]; then 
			FIND3="-o $FINDOPTIONS $NAME \"$STR3\""
			GREP3=`echo '|'"$STR3"`
		fi
		STR4=`echo "$TMP" | cut -d "|" -f 4`
		if [ "$STR4" ]; then
			FIND4="-o $FINDOPTIONS $NAME \"$STR4\""
			GREP4=`echo '|'"$STR4"`
		fi
		STR5=`echo "$TMP" | cut -d "|" -f 5`
		if [ "$STR5" ]; then
			FIND5="-o $FINDOPTIONS $NAME \"$STR5\""
			GREP5=`echo '|'"$STR5"`
		fi
		echo -n "find $FOLLOW_SYM \"$SEARCHPATH\" $EXCLUDE1 $FIND1 $FIND2 $FIND3 $FIND4 $FIND5 " > $WORKDIR/pfilesearch-execfind
		echo -n "grep $GREPCASE -l -E \"$GREP1$GREP2$GREP3$GREP4$GREP5\" "'"$TMP2"'" " > $WORKDIR/pfilesearch-execgrep
	fi
	#[AND]
	if [ "`echo "$SEARCHSTRING2" | grep -o "\[AND\]"`" ]; then #Check if [AND] is used
		TMP=`echo "$SEARCHSTRING2" | sed -e "s/\ \[/\[/g" | sed -e "s/\]\ /\]/g" | sed -e "s/\[AND\]/*\|*/g"` #cut -d syntax
		STR1=`echo "$TMP" | cut -d "|" -f 1`
		FIND1="$FINDOPTIONS $NAME \"$STR1\""
		STR2=`echo "$TMP" | cut -d "|" -f 2`
		[ "$STR2" ] && FIND2="-a $FINDOPTIONS $NAME \"$STR2\""
		STR3=`echo "$TMP" | cut -d "|" -f 3`
		[ "$STR3" ] && FIND3="-a $FINDOPTIONS $NAME \"$STR3\""
		STR4=`echo "$TMP" | cut -d "|" -f 4`
		[ "$STR4" ] && FIND4="-a $FINDOPTIONS $NAME \"$STR4\""
		STR5=`echo "$TMP" | cut -d "|" -f 5`
		[ "$STR5" ] && FIND5="-a $FINDOPTIONS $NAME \"$STR5\""
		echo -n "find $FOLLOW_SYM \"$SEARCHPATH\" $EXCLUDE1 $FIND1 $FIND2 $FIND3 $FIND4 $FIND5 " > $WORKDIR/pfilesearch-execfind
	fi
	#====== FIND ======
	if [ $CHKFILENAME = "true" ]; then
		if [ $FIND3X = "true" ]; then
			if [ $CHKFILE = "true" ]; then
				sed -i -e "s/-o/-o -type f/g" $WORKDIR/pfilesearch-execfind #pushing -type f to command
				sed -i -e "s/-a/-a -type f/g" $WORKDIR/pfilesearch-execfind
				echo -n "-type f " >> $WORKDIR/pfilesearch-execfind
			fi
			if [ $CHKDIR = "true" ]; then
				sed -i -e "s/-o/-o -type d/g" $WORKDIR/pfilesearch-execfind #pushing -type d to command
				sed -i -e "s/-a/-a -type d/g" $WORKDIR/pfilesearch-execfind
				echo -n "-type d " >> $WORKDIR/pfilesearch-execfind
			fi
			if [ $CHKSYMLN = "true" ];	then
				sed -i -e "s/-o/-o -type l/g" $WORKDIR/pfilesearch-execfind #pushing -type l to command
				sed -i -e "s/-a/-a -type l/g" $WORKDIR/pfilesearch-execfind
				echo -n "-type l " >> $WORKDIR/pfilesearch-execfind
			fi
		fi
		chmod 722 $WORKDIR/pfilesearch-execfind	
		$WORKDIR/pfilesearch-execfind >> $HOME/.pfilesearch/hits #Run find command
	fi
	#====== GREP =======
	if [ $CHKCONTENT = "true" ]; then
		chmod 722 $WORKDIR/pfilesearch-execgrep
		echo "find $FOLLOW_SYM \"$SEARCHPATH\" $FINDOPTIONS -iname \"*\" -type f" > $WORKDIR/pfilesearch-execfind #build command
		chmod 722 $WORKDIR/pfilesearch-execfind
		$WORKDIR/pfilesearch-execfind > $WORKDIR/pfilesearch-allfiles
		if test -n "$EXT"; then
			grep -i "('$EXT')" $WORKDIR/pfilesearch-allfiles > $WORKDIR/pfilesearch-tmp
			mv -f $WORKDIR/pfilesearch-tmp $WORKDIR/pfilesearch-allfiles
		fi
		#All this to make [AND] allowed to grep 
		TMP=`echo "$SEARCHSTRING" | grep -o "\[AND\]"` #Check if [AND] is used
		if [ "$TMP" ]; then
			echo -e "\c" > $WORKDIR/pfilesearch-tmp4
			STR1=`echo "$STR1" | sed -e "s/*//g"`
			while read I; do
				export TMP2="$I" #export to use in next-line-func
				grep $GREPCASE -l "$STR1" "$TMP2" >> $WORKDIR/pfilesearch-tmp4
			done < $WORKDIR/pfilesearch-allfiles
			cp -f $WORKDIR/pfilesearch-tmp4 $WORKDIR/pfilesearch-allfiles
			if [ "$STR2" ]; then
				echo -e "\c" > $WORKDIR/pfilesearch-tmp4
				STR2=`echo "$STR2" | sed -e "s/*//g"`
				while read I; do
					export TMP2="$I" #export to use in next-line-func
					grep $GREPCASE -l "$STR2" "$TMP2" >> $WORKDIR/pfilesearch-tmp4
				done < $WORKDIR/pfilesearch-allfiles
				cp -f $WORKDIR/pfilesearch-tmp4 $WORKDIR/pfilesearch-allfiles
			fi
			if [ "$STR3" ]; then
				echo -e "\c" > $WORKDIR/pfilesearch-tmp4
				STR3=`echo "$STR3" | sed -e "s/*//g"`
				while read I; do
					export TMP2="$I" #export to use in next-line-func
					grep $GREPCASE -l "$STR3" "$TMP2" >> $WORKDIR/pfilesearch-tmp4
				done < $WORKDIR/pfilesearch-allfiles
				cp -f $WORKDIR/pfilesearch-tmp4 $WORKDIR/pfilesearch-allfiles
			fi
			if [ "$STR4" ]; then
				echo -e "\c" > $WORKDIR/pfilesearch-tmp4
				STR4=`echo "$STR4" | sed -e "s/*//g"`
				while read I; do
					export TMP2="$I" #export to use in next-line-func
					grep $GREPCASE -l "$STR4" "$TMP2" >> $WORKDIR/pfilesearch-tmp4
				done < $WORKDIR/pfilesearch-allfiles
				cp -f $WORKDIR/pfilesearch-tmp4 $WORKDIR/pfilesearch-allfiles
			fi
			if [ "$STR5" ]; then
				echo -e "\c" > $WORKDIR/pfilesearch-tmp4
				STR5=`echo "$STR5" | sed -e "s/*//g"`
				while read I; do
					export TMP2="$I" #export to use in next-line-func
					grep $GREPCASE -l "$STR5" "$TMP2" >> $WORKDIR/pfilesearch-tmp4
				done < $WORKDIR/pfilesearch-allfiles
				cp -f $WORKDIR/pfilesearch-tmp4 $WORKDIR/pfilesearch-allfiles
			fi
			cp $WORKDIR/pfilesearch-allfiles $HOME/.pfilesearch/hits
#-----
		else
			while read I; do
				export TMP2="$I" #export to use in next-line-func
				$WORKDIR/pfilesearch-execgrep >> $HOME/.pfilesearch/hits
			done < $WORKDIR/pfilesearch-allfiles
		fi
	fi
done < $WORKDIR/pfilesearch-SEARCHPATHS
#remove excluded dir from hit-list
if [ "$EXCLUDE" ]; then
	grep -vw "$EXCLUDE" $HOME/.pfilesearch/hits > $WORKDIR/pfilesearch-tmp
	cp -f $WORKDIR/pfilesearch-tmp $HOME/.pfilesearch/hits
fi
#find only files with choosen extension
if test -n "$EXT"; then
	cat $HOME/.pfilesearch/hits | grep -i "('$EXT')" > $WORKDIR/pfilesearch-tmp
	cat $WORKDIR/pfilesearch-tmp > $HOME/.pfilesearch/hits
fi
#---
cp -f $HOME/.pfilesearch/hits /tmp/result-pfilesearch > /dev/null 2>&1 #make it compatible with older versions
echo "$SEARCHPATHS" > $WORKDIR/SEARCHPATHS #store last used
if [ ! -s $HOME/.pfilesearch/hits ] && [ "$BBACKEND" != "true" ]; then
	echo 100 > $WORKDIR/pfilesearch-splash #end progressbar.
	ERROR="$LOC701"
	error_dialog
fi
echo 100 > $WORKDIR/pfilesearch-splash #end progress bar
#show result
if [ "$BACKEND" != "true" ] && [ -s $HOME/.pfilesearch/hits ]; then
	export pfilesearch_result="
	<window title=\"pfilesearch\">
	<vbox>
	 <edit>
	  <input file>$HOME/.pfilesearch/hits</input>
	  <width>400</width><height>400</height>
	 </edit>
	</vbox></window>"
	I=$IFS; IFS=""
	for STATEMENTS in  $($GTKDIALOG --program=pfilesearch_result --center); do
		eval $STATEMENTS > /dev/null 2>&1
	done
	IFS=$I
fi
}

error_dialog () {
export error_box="
<window title=\"pfilesearch\">
<vbox>
 <frame info>
  <pixmap icon_size=\"6\"><input file stock=\"gtk-dialog-error\"></input></pixmap>
  <text><label>$ERROR</label></text>
    </frame>
 <button><label>$LOC_OK</label></button>
</vbox></window>"
I=$IFS; IFS=""
for STATEMENTS in  $($GTKDIALOG --program=error_box --center); do
	eval $STATEMENTS > /dev/null 2>&1
done
IFS=$I
}

gui_advanced (){
if [ "$SEARCHPATHS" = "/" ]; then SEARCHPATHS="/  ($LOC601)"; fi
export pfilesearch_advanced='
<window title= "Pfilesearch" icon-name="gtk-find">
<hbox>
 <vbox>
  <hbox>
   <vbox>
    <frame '$LOC_SEARCH' '$LOC_FOR'>
     <hbox>
      <entry activates-default="true">
       <variable>SEARCHSTRING</variable>
       <input>echo "$SEARCHSTRING"</input>'"
      </entry>
      <button>
       <input file stock=\"gtk-info\"></input>
       <action>FRAME=Info; IMG=dialog-info; TXT1=\$LOC313; . $PROGPATH/box_ok</action>
      </button>
     </hbox>
     <text><label>\" \"</label></text>
     <hbox>
      <checkbox><label>$LOC200</label><variable>CHKFILENAME</variable><default>$CHKFILENAME</default></checkbox>
      <checkbox><label>$LOC505</label><variable>CHKCONTENT</variable><default>$CHKCONTENT</default></checkbox>
      <button>
       <input file stock=\"gtk-info\"></input>
       <action>FRAME=Info; IMG=dialog-info; TXT1=\$LOC312; . $PROGPATH/box_ok</action>
      </button>
     </hbox>
    </frame>
    <frame $LOC_SEARCH $LOC_IN>
     <hbox>
      <entry accept=\"directory\"><variable>SEARCHPATHS</variable><input>echo '$SEARCHPATHS'</input></entry>
      <button>
       <input file stock=\"gtk-open\"></input>
       <action type=\"fileselect\">SEARCHPATHS</action>
      </button>
      <button>
       <input file stock=\"gtk-info\"></input>
       <action>FRAME=Info; IMG=dialog-info; TXT1=\$LOC311; . $PROGPATH/box_ok</action>
      </button>
     </hbox>
    </frame>
    <frame $LOC_EXCLUDE>
     <hbox>
      <entry accept=\"directory\"><variable>EXCLUDE</variable><input>echo '$EXCLUDE'</input></entry>
      <button>
       <input file stock=\"gtk-open\"></input>
       <action type=\"fileselect\">EXCLUDE</action>
      </button>
      <button>
       <input file stock=\"gtk-info\"></input>
       <action>FRAME=Info; IMG=dialog-info; TXT1=\$LOC316; . $PROGPATH/box_ok</action>
      </button>
     </hbox>
    </frame>
    <frame $LOC_OPTIONS>
     <checkbox><label>$LOC506</label><variable>CHKREC</variable><default>$CHKREC</default></checkbox>
     <checkbox><label>$LOC507</label><variable>CHKXDEV</variable><default>$CHKXDEV</default></checkbox>
     <checkbox><label>$LOC508</label><variable>CHKEXACT</variable><default>$CHKEXACT</default></checkbox>
     <checkbox><label>$LOC509</label><variable>CHKCASE</variable><default>$CHKCASE</default></checkbox>
     <checkbox><label>$LOC510</label><variable>CHKFOLLOW_SYM</variable><default>$CHKFOLLOW_SYM</default></checkbox>
    </frame>
   </vbox>
   <frame $LOC512>
    <vbox>
     <checkbox><label>$LOC_FILE</label><variable>CHKFILE</variable><default>$CHKFILE</default></checkbox>
     <checkbox><label>$LOC_SYMLINK</label><variable>CHKSYMLN</variable><default>$CHKSYMLN</default></checkbox>
     <checkbox><label>$LOC_DIRECTORY</label><variable>CHKDIR</variable><default>$CHKDIR</default></checkbox>
     <text><label>\" \"</label></text>
     <text><label>\" \"</label></text>
     <checkbox><label>$LOC_DOCUMENTS</label><variable>CHKDOC</variable><default>$CHKDOC</default></checkbox>
     <checkbox><label>$LOC_PICTURES</label><variable>CHKPIC</variable><default>$CHKPIC</default></checkbox>
     <checkbox><label>$LOC_SOUNDFILES</label><variable>CHKMUSIC</variable><default>$CHKMUSIC</default></checkbox>
     <checkbox><label>$LOC_VIDEOS</label><variable>CHKVIDEO</variable><default>$CHKVIDEO</default></checkbox>
     <checkbox><label>$LOC_MAILS</label><variable>CHKMAIL</variable><default>$CHKMAIL</default></checkbox>
     <checkbox><label>$LOC_COMPRESSED</label><variable>CHKZIP</variable><default>$CHKZIP</default></checkbox>
     <checkbox><label>$LOC_CODEFILES</label><variable>CHKCODE</variable><default>$CHKCODE</default></checkbox>
    </vbox>
   </frame>
   <vbox>
    <frame $LOC513>
     <hbox>
      <vbox>
       <hbox>
        <checkbox><label>atime</label><variable>CHKATIME</variable><default>$CHKATIME</default></checkbox>
        <checkbox><label>ctime</label><variable>CHKCTIME</variable><default>$CHKCTIME</default></checkbox>
        <checkbox><label>mtime</label><variable>CHKMTIME</variable><default>$CHKMTIME</default></checkbox>
       </hbox>
       <hbox>
        <text><label>$LOC_FROM</label></text>
        <vbox>
         <entry>
         <variable>DATE_FROM</variable>
         <input>echo '$DATE_FROM'</input>
         <width>120</width><height>27</height>
        </entry>
       </vbox>
      </hbox>
      <hbox>
       <text><label>$LOC_TO</label></text>
       <vbox>
        <entry>
         <variable>DATE_TO</variable>
         <input>echo '$DATE_TO'</input>
         <width>120</width><height>27</height>
        </entry>
       </vbox>
      </hbox>
     </vbox>
     <vbox>
      <button>
       <input file stock=\"gtk-info\"></input>
       <action>FRAME=Info; IMG=dialog-info; TXT1=\$LOC314; . $PROGPATH/box_ok</action>
      </button>
      </vbox>
     </hbox>
    </frame>
    <frame $LOC515>
     <hbox>
      <vbox>
       <hbox>
        <text><label>$LOC516</label></text>
        <vbox>
         <entry>
          <variable>SIZE_GT</variable>
          <input>echo '$SIZE_GT'</input>
          <width>70</width><height>27</height>
         </entry>
        </vbox>
       </hbox>
       <hbox>
        <text><label>$LOC517</label></text>
        <vbox>
         <entry>
          <variable>SIZE_LT</variable>
          <input>echo '$SIZE_LT'</input>
          <width>70</width><height>27</height>
         </entry>
        </vbox>
       </hbox>
      </vbox>
      <vbox>
       <button>
        <input file stock=\"gtk-info\"></input>
        <action>FRAME=Info; IMG=dialog-info; TXT1=\$LOC315; . $PROGPATH/box_ok</action>
       </button>
      </vbox>
     </hbox>
    </frame>
    <frame $LOC518>
     <hbox>
      <text><label>$LOC519</label></text>
      <entry><variable>USER</variable><input>echo '$USER'</input></entry>
     </hbox>
    </frame>
    <frame $LOC520>
     <hbox>
      <vbox>
       <text><label>\"$LOC521    \"</label></text>
       <checkbox><label>\"      \"</label><variable>CHK_UR</variable><default>$CHK_UR</default></checkbox>
       <checkbox><label>\"      \"</label><variable>CHK_GR</variable><default>$CHK_GR</default></checkbox>
       <checkbox><label>\"      \"</label><variable>CHK_OR</variable><default>$CHK_OR</default></checkbox>
      </vbox>
      <vbox>
       <text><label>\"$LOC522    \"</label></text>
       <checkbox><label>\"      \"</label><variable>CHK_UW</variable><default>$CHK_UW</default></checkbox>
       <checkbox><label>\"      \"</label><variable>CHK_GW</variable><default>$CHK_GW</default></checkbox>
       <checkbox><label>\"      \"</label><variable>CHK_OW</variable><default>$CHK_OW</default></checkbox>
      </vbox>
      <vbox>
       <text><label>\"$LOC523                  \"</label></text>
       <checkbox><label>\"   $LOC524\"</label><variable>CHK_UX</variable><default>$CHK_UX</default></checkbox>
       <checkbox><label>\"   $LOC525\"</label><variable>CHK_GX</variable><default>$CHK_GX</default></checkbox>
       <checkbox><label>\"   $LOC526\"</label><variable>CHK_OX</variable><default>$CHK_OX</default></checkbox>
      </vbox>
     </hbox>
    </frame>
   </vbox>
  </hbox>
  <hbox>
   <button>
    <input file stock=\"gtk-cancel\"></input>
    <label>$LOC_CANCEL</label>
    <action type=\"exit\">99</action>
   </button>
   <text><label>\"      \"</label></text>
   <button>
    <input file stock=\"gtk-preferences\"></input>
    <label>$LOC102</label>
    <action type=\"exit\">98</action>
   </button>
   <button can-default=\"true\" has-default=\"true\" use-stock=\"true\">
    <input file stock=\"gtk-find\"></input>
    <label>$LOC_SEARCH</label>
    <action type=\"exit\">80</action>
   </button>
  </hbox>
 </vbox>
</hbox></window>"
I=$IFS; IFS=""
for STATEMENTS in  $($GTKDIALOG -p pfilesearch_advanced); do
	eval $STATEMENTS
done
IFS=$I
case $EXIT in
	80) search;;
	98) configure
		gui_advanced;;
	*)	rm $WORKDIR/pfilesearch* > /dev/null 2>&1
		#if pfind was started directly to pfilesearch it should be closed
		TMP=`ps`
		if [ "`echo "$TMP" | grep 'pfind' | grep "\-a"`" ]; then
			echo closing....
			sleep 6
		fi
		#---
		exit;;
esac
}

configure () {
export pfilesearch_preferences="
<window title=\"pfilesearch $LOC102\"icon-name=\"gtk-find\">
<vbox>
 <notebook labels=\" $LOC_SEARCH | $LOC309\">
  <vbox>
   <frame $LOC310>
    <hbox>
     <entry><variable>SEARCHPATHS</variable><input>echo '$SEARCHPATHS'</input></entry>
     <button>
      <input file stock=\"gtk-info\"></input>
      <action>FRAME=Info; IMG=dialog-info; TXT1=\$LOC311; . $PROGPATH/box_ok</action>
     </button>
    </hbox>
   </frame>
   <frame $LOC_EXCLUDE>
    <hbox>
     <entry><variable>EXCLUDE</variable><input>echo '$EXCLUDE'</input></entry>
     <button>
      <input file stock=\"gtk-info\"></input>
      <action>FRAME=Info; IMG=dialog-info; TXT1=\$LOC316; . $PROGPATH/box_ok</action>
     </button>
    </hbox>
   </frame>
   <frame $LOC_OPTIONS>
    <checkbox>
     <label>$LOC506</label>
     <variable>CHKREC</variable>
     <default>$CHKREC</default>
    </checkbox>
    <checkbox>
     <label>$LOC507</label>
     <variable>CHKXDEV</variable>
     <default>$CHKXDEV</default>
    </checkbox>
    <checkbox>
     <label>$LOC508</label>
     <variable>CHKEXACT</variable>
     <default>$CHKEXACT</default>
    </checkbox>
    <checkbox>
     <label>$LOC509</label>
     <variable>CHKCASE</variable>
     <default>$CHKCASE</default>
    </checkbox>
    <checkbox>
     <label>$LOC510</label>
     <variable>CHKFOLLOW_SYM</variable>
     <default>$CHKFOLLOW_SYM</default>
    </checkbox>
   </frame>
  </vbox>
  <vbox>
   <frame $LOC309>
    <edit><variable>MIME</variable><input file>$HOME/.pfilesearch/pfilesearchMIMErc</input></edit>
   </frame>
  </vbox>
 </notebook>
 <hbox>
  <button><input file stock=\"gtk-cancel\"></input><label>$LOC_CANCEL</label></button>
  <button><input file stock=\"gtk-ok\"></input><label>$LOC_OK</label><action type=\"exit\">OK</action></button>
 </hbox>
</vbox>
</window>"
I=$IFS; IFS=""
for STATEMENTS in  $($GTKDIALOG --program=pfilesearch_preferences --center); do
	eval $STATEMENTS
done
IFS=$I
if [ $EXIT = OK ]; then
	echo "$MIME" > $HOME/.pfilesearch/pfilesearchMIMErc
	write_config
fi
}

write_config () {
	echo "export SEARCHPATHS=\"$SEARCHPATHS\""				> $HOME/.pfilesearch/pfilesearchrc
	echo "export EXCLUDE=\"$EXCLUDE\""						>> $HOME/.pfilesearch/pfilesearchrc
	echo "export CHKREC=$CHKREC"							>> $HOME/.pfilesearch/pfilesearchrc
	echo "export CHKXDEV=$CHKXDEV"							>> $HOME/.pfilesearch/pfilesearchrc
	echo "export CHKEXACT=$CHKEXACT"						>> $HOME/.pfilesearch/pfilesearchrc
	echo "export CHKCASE=$CHKCASE"							>> $HOME/.pfilesearch/pfilesearchrc
	echo "export CHKFOLLOW_SYM=$CHKFOLLOW_SYM" 				>> $HOME/.pfilesearch/pfilesearchrc
	. $HOME/.pfilesearch/pfilesearchrc #read config file

}

#========================== PROGRAM =============================
while [ $# != 0 ]; do
	I=1
	while [ $I -le `echo $# | wc -c` ]; do #check all parameters
		case "$1" in
	-h)echo 'Options
  -b          use as backend. Do not show searchresult.
  -bb         Do not show 'No Files found' box.
  -bbb        Do not show 'Searching...' box.
  -c [STRING] search quiet. No gui.
  -d [DIR]    Search in a specific directory.
  -f [FILTER] Search for only groups of files:
              documents
              pictures
              music
              videos
              emails
              compressed_files
              code_files
  -i          install config files and exit.
  -h          show this help message.
  -p          show preferences gui at startup.
  -t [STRING] Define default search text.
  -v          show Pfilesearch version.'
 		 		exit
 		 		;;
 			-b) export BACKEND=true;;
 			-bb) export BACKEND=true; export BBACKEND=true;;
 			-bbb) export BACKEND=true; export BBACKEND=true; export BBBACKEND=true;;
 		 	-d) OVERRIDE_SEARCHPATHS="$2"; shift; I=$[$I + 1]
 		 		[ "$OVERRIDE_SEARCHPATHS" = './' ] && OVERRIDE_SEARCHPATHS="`pwd`";;
 		 	-f) FILTER=$2; shift; I=$[$I + 1];;
  			-i) INTERFACE=install;;
			-c) INTERFACE=cli; CLI_STRING="$2"; shift; I=$[$I + 1];;
			-p) INTERFACE=pref;;
			-t) OVERRIDE_SEARCHTEXT="$2"; shift; I=$[$I + 1];;
			-v) echo "Pfilesearch $VERSION"; exit;;
		esac
		shift
		I=$[$I + 1]
	done
done
echo -n > $WORKDIR/SEARCHPATHS #cleanup
#default 
CHKFILENAME="true"; CHKCONTENT="false"; SEARCHSTRING="Search text"
CHKFILE="false"; CHKSYMLN="false"; CHKDIR="false"
CHKDOC="false"; CHKPIC="false"; CHKMUSIC="false"; CHKVIDEO="false"; CHKMAIL="false"; CHKZIP="false"; CHKCODE="false" #filters
case $FILTER in
	documents)	CHKDOC=true;;
	pictures)	CHKPIC=true;;
	music)		CHKMUSIC=true;;
	videos)		CHKVIDEO=true;;
	emails)		CHKMAIL=true;;
	compressed_files) CHKZIP=true;;
	code_files)	CHKCODE=true;;
esac
TODAY=`date +%m/%d/%Y`; CHKATIME="false"; CHKCTIME="false"; CHKMTIME="false"; DATE_FROM="01/01/1970"; DATE_TO="$TODAY"
USER=""; SIZE_GT=""; SIZE_LT=""
CHK_UR="false"; CHK_UW="false"; CHK_UX="false"
CHK_GR="false"; CHK_GW="false"; CHK_GX="false"
CHK_OR="false"; CHK_OW="false"; CHK_OX="false"
#rcfile
export SEARCHPATHS="/"
export EXCLUDE="/initrd"
CHKREC=true
CHKXDEV=false
CHKEXACT=false
CHKCASE=false
CHKFOLLOW_SYM=false
. $HOME/.pfilesearch/pfilesearchrc 2> /dev/null #read config file
[ "$OVERRIDE_SEARCHPATHS" ] && export SEARCHPATHS="$OVERRIDE_SEARCHPATHS" #parameter -d is used
[ "$OVERRIDE_SEARCHTEXT" ] && export SEARCHSTRING="$OVERRIDE_SEARCHTEXT" #parameter -t is used
#check if MIME-file is installed
if [ ! -f $HOME/.pfilesearch/pfilesearchMIMErc ]; then #no rc-file
	mkdir $HOME/.pfilesearch 2> /dev/null
	cp -f "$PROGPATH"pfilesearchMIMErc $HOME/.pfilesearch/pfilesearchMIMErc
fi
#set language
TMP="`ls -1 $PROGPATH/locals/ | grep ${LANG%.*}`"
. $PROGPATH/locals/en_US:english #always run to fill gaps in translation
#fallback to macrolanguage if available (ISO 639-1 two letter code: en, es, fr, etc.)
[ -z $TMP ] && TMP="`ls -1 $PROGPATH/locals/ | grep ${LANG%_*}:`"
[ "$TMP" != "en_US:english" ] && . $PROGPATH/locals/$TMP 2> /dev/null 
#---
export EXTDOC=`grep document= $HOME/.pfilesearch/pfilesearchMIMErc | sed -e s/^.*\=//g | sed -e 's/ ./$\\\|\\\./g'`
#'$' makes the end of word (extension) '\|' makes grep either
export EXTPIC=`grep picture= $HOME/.pfilesearch/pfilesearchMIMErc | sed -e s/^.*\=//g | sed -e 's/ ./$\\\|\\\./g'`
export EXTMUSIC=`grep music= $HOME/.pfilesearch/pfilesearchMIMErc | sed -e s/^.*\=//g | sed -e 's/ ./$\\\|\\\./g'`
export EXTVIDEO=`grep video= $HOME/.pfilesearch/pfilesearchMIMErc | sed -e s/^.*\=//g | sed -e 's/ ./$\\\|\\\./g'`
export EXTMAIL=`grep mail= $HOME/.pfilesearch/pfilesearchMIMErc | sed -e s/^.*\=//g | sed -e 's/ ./$\\\|\\\./g'`
export EXTZIP=`grep zip= $HOME/.pfilesearch/pfilesearchMIMErc | sed -e s/^.*\=//g | sed -e 's/ ./$\\\|\\\./g'`
export EXTCODE=`grep code= $HOME/.pfilesearch/pfilesearchMIMErc | sed -e s/^.*\=//g | sed -e 's/ ./$\\\|\\\./g'`
case $INTERFACE in
	install)
		write_config
		exit
		;;
	cli)
		SEARCHSTRING="$CLI_STRING"
		search
		;;
	pref)
		configure
		;;
	*)
		gui_advanced
		;;
esac
