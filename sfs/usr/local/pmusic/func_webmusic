#!/bin/sh
#Pmusic
#Copyright 2008,2009,2010,2011
#Sigmund Berglund - Valåmoen, Norway.


alias wget='wget -U "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15" -t 1 --connect-timeout=1'

case "$1" in
-get_youtube_url)
	#downloading html file
	wget -O $WORKDIR/youtube "$2" -q
	#get title - first try index_webmusic_youtube
	TITLE="`grep -Fm1 "$2" $HOME/.pmusic/index_webmusic_youtube | cut -d'|' -f2`"
	ARTIST="`grep -Fm1 "$2" $HOME/.pmusic/index_webmusic_youtube | cut -d'|' -f3`"
	export NAME="$ARTIST - $TITLE"
	#if not in index, detect from youtube.com
	if [ ! "$TITLE" ]; then
		NAME=$(grep -m1 -o "<meta name=\"title\" content=\".*\">" $WORKDIR/youtube)
		NAME=`expr match "$NAME" '<meta name=\"title\" content=\"\(.*\)\">'`
		export NAME=${NAME//\//"-"}
	fi
	#---
#	XML=$(grep -o "'PLAYER_CONFIG': {.*}" $WORKDIR/youtube)
	XML=$(grep -F "'PLAYER_CONFIG':" $WORKDIR/youtube)
	#length from index_webmusic_youtube
	LENGTH="`grep -Fm1 "$2" $HOME/.pmusic/index_webmusic_youtube | cut -d'|' -f9`"
	[ ! "$LENGTH" ] && LENGTH=59:59 #no length is found in index_webmusic_youtube
	#define URL
#	URL=${XML#*\"fmt_url_map\": \"}
	URL=${XML#*\"url_encoded_fmt_stream_map\": \"}
#	URL=${URL%%\"*}
#	URL=`echo ${URL//,/ } | tac -s' ' | cut -d' ' -f1 | tail -n1`
#	URL=${URL#*|}
#	URL=${URL%%|*}
	URL="`echo "$URL" | cut -d, -f2`"
	URL=${URL//\\\///}
	URL=${URL//\\\u0026/&}
	export URL="$(echo $URL | cut -d= -f2- | sed -e s/\\http:[^\]]*\\.v/http:\\/\\/v/ | sed -f $APPDIR/sed_ascii2txt)"
	;;
-jamendo_top100)
	#---
	[ "$2" ] && GENRE="&tag_idstr=$2"
	#check internet connection
	LANG=C wget --spider --tries 1 $PING_SERVER  2> $WORKDIR/tmpinfo
	if [ ! "`grep -F 'connected' $WORKDIR/tmpinfo`" ]; then
		echo "|$LOC669" > $WORKDIR/sourcelist
	else
		#show splash - the reason for using a splash is that it should work both from menu and overview. in gui_add the refresh:UPDATE_SOURCELIST2 can only be run _after_ the whole function exits, so a temporary message would never show up
		echo "$LOC492" > $WORKDIR/splashtext
		$APPDIR/box_splash &
		wget --tries 1 -O - "http://api.jamendo.com/get2/id+name+artist_name+url+album_name+numalbum+dates+genre+duration/track/plain/track_album+album_artist/?n=100&order=ratingweek_desc${GENRE}" | tr '\t' '|' | sed -e 's%http://www.jamendo.com/en/track/%  96         %g' -e 's/Array//g' -e 's/^/  http:\/\/api.jamendo.com\/get2\/stream\/track\/redirect\/?streamencoding=mp31\&id=/g' > $WORKDIR/sourcelist
	fi
	echo true > $WORKDIR/UPDATE_SOURCELIST2 #update source-list
	echo 100 > $WORKDIR/splash
	;;
-build_jamendo_index)
	LANG=C wget --tries=1 -O $WORKDIR/tmp_jamendo_dump.gz http://img.jamendo.com/data/dbdump_artistalbumtrack.xml.gz
	gunzip $WORKDIR/tmp_jamendo_dump.gz
	COUNT=0
	TOTAL=`wc -l $WORKDIR/tmp_jamendo_dump | cut -d' ' -f1`
	echo "preparing input data..."
	echo -n > $WORKDIR/index_jamendo
	while read I; do #read index file line by line (artist by artist)
		#split all xml tags into newlines
		echo "$I" | tr '>' '\n' | grep -E "<album|</album|</id|</name|</releasedate|</id3genre|</numalbum|</track|</duration" > $WORKDIR/tmp_jamendo
		#find artist
		ARTIST="`grep -Fm1 '</name' $WORKDIR/tmp_jamendo | cut -d'<' -f1`"
		#give some progress output
		if [ "$ARTIST" ]; then
			PERCENT=$(($COUNT*100/$TOTAL))
			echo "$COUNT(${PERCENT}%) `wc -l $HOME/.pmusic/index_jamendo | cut -d' ' -f1` $ARTIST"
			COUNT=$(($COUNT+1))
		fi
		#find albums
		grep -FA3 '<album' $WORKDIR/tmp_jamendo | grep -F '</name' | cut -d'<' -f1 > $WORKDIR/tmp_jamendo_albums
		while read ALBUM; do
			grep -A100 -Fm1 "$ALBUM" $WORKDIR/tmp_jamendo | tac | head -n -1 | tac > $WORKDIR/tmp_jamendo2
			while read J; do
				case "$J" in
					*"</album")	#we have reach next album
						break
						;;
					*"</id")
						ID="`echo "$J" | cut -d'<' -f1`"
						;;
					*"</name")
						TITLE="`echo "$J" | cut -d'<' -f1`"
						;;
					*"</releasedate")
						YEAR="`echo "$J" | cut -d'<' -f1 | cut -d'-' -f1`"
						;;
					*"</numalbum")
						TRACK="`echo "$J" | cut -d'<' -f1`"
						;;
					*"</duration")
						TMP="`echo "$J" | cut -d'<' -f1 | cut -d. -f1`" #seconds
						MIN=$(($TMP/60))
						SEC=$(($TMP-($MIN*60)))
						LENGTH=$(printf "%02d" $MIN):$(printf "%02d" $SEC)
						;;
					*"</id3genre")
						TMP="`echo "$J" | cut -d'<' -f1`"
						if [ "$TMP" ] && [ "$TMP" != "0" ]; then #if album_id3 is set, track_id3 could be set to 0
							GENRE="`grep "^${TMP}|" $APPDIR/txt_id3genre | cut -d'|' -f2`"
						fi
						;;
					*"</track")
						 #add item to index
						 echo "  http://api.jamendo.com/get2/stream/track/redirect/?streamencoding=mp31&id=${ID}|$TITLE|$ARTIST|96|$ALBUM|$TRACK|$YEAR|$GENRE|$LENGTH" >> $HOME/.pmusic/index_jamendo
						;;
				esac
			done < $WORKDIR/tmp_jamendo2
			GENRE="" #not all items/albums has genre defined, so we clear it to avoid duplication in next album
		done < $WORKDIR/tmp_jamendo_albums
	done < $WORKDIR/tmp_jamendo_dump

	sed -f $APPDIR/sed_html2txt -i $HOME/.pmusic/index_jamendo
	rm $WORKDIR/tmp_jamendo_dump #remove the huge raw file
	mv -f $HOME/.pmusic/index_jamendo $HOME/.pmusic/index_webmusic_jamendo
	#turn on search-filter - off by default
	echo true > $WORKDIR/SEARCH_WEBMUSIC
	;;
-webmusic)
	#message 
	echo "|$LOC635" > $WORKDIR/sourcelist
	echo true > $WORKDIR/UPDATE_SOURCELIST2 #update source-list
	#check if db exists
	if [  ! -s $HOME/.pmusic/index_webmusic* ]; then
		echo -e "$LOC630" > $WORKDIR/sourcelist
		echo true > $WORKDIR/UPDATE_SOURCELIST2
		exit
	fi
	#show list of artists
	grep -F '|' $HOME/.pmusic/index_webmusic* | cut -d'|' -f3 | sort -u > $WORKDIR/tmp
	paste -d'|' $WORKDIR/tmp $WORKDIR/tmp > $WORKDIR/sourcelist
	sed -i 's%^.*%  pmusic_webmusic_artist:&%g' $WORKDIR/sourcelist
	echo true > $WORKDIR/UPDATE_SOURCELIST2
	;;
-webmusic_artist)
	#show list of albums
	echo '  pmusic_webmusic|..' > $WORKDIR/sourcelist
	grep -F "$2" $HOME/.pmusic/index_webmusic* | awk -F "|" '{print "  pmusic_webmusic_album:"$5"|"$7"  "$5}' | sort -u -nst'|' -k2,2 >> $WORKDIR/sourcelist
	echo true > $WORKDIR/UPDATE_SOURCELIST2 #update source-list
	cp -f $WORKDIR/sourcelist $WORKDIR/sourcelist_webmusic_artist #keep a copy if user wants back
	;;
-webmusic_album)
	echo '  pmusic_webmusic_back|..' > $WORKDIR/sourcelist
	#show list of tracks
	grep -F "$2" $HOME/.pmusic/index_webmusic* >> $WORKDIR/sourcelist
	echo true > $WORKDIR/UPDATE_SOURCELIST2 #update source-list
	;;
-webmusic_back)
	cp -f $WORKDIR/sourcelist_webmusic_artist $WORKDIR/sourcelist
	echo true > $WORKDIR/UPDATE_SOURCELIST2 #update source-list
	;;
-webmusic_manager)
	. $APPDIR/func -reset_gtk
	export pmusic_webmusic='
	<window title="Pmusic - '$LOC221' '$LOC_SETUP'" icon-name="pmusic">
	<vbox>
	 <notebook labels=" '$LOC_INSTALL' | '$LOC_ADVANCED' ">
	  <frame>
	   <text><label>"'$LOC631'"</label></text>
	   <hbox homogeneous="true"><hbox>
	    <button>
	     <input file stock="gtk-apply"></input>
	     <label>'$LOC_INSTALL'</label>
	     <action>EXIT:install</action>
	    </button>
	   </hbox></hbox>
	  </frame>
	  <frame>
	   <text><label>"'$LOC632'"</label></text>
	   <hbox homogeneous="true"><hbox>  
	    <button>
	     <label>'$LOC637'</label>
	     <action>EXIT:build</action>
	    </button>
	   </hbox></hbox>
	  </frame>
	 </notebook>
	 <hbox>
	  <text use-markup="true"><label>"<b>'$LOC633':</b>"</label></text>
	  <text><input>find $HOME/.pmusic/index_webmusic_jamendo -printf "%Td.%Tb %TY   (%TH:%TM)"</input></text>
	  <text use-markup="true"><label>"  <b>'$LOC634':</b>"</label></text>
	  <text><input>"grep -c ^ $HOME/.pmusic/index_webmusic_jamendo"</input></text>
	  <button cancel></button>
	 </hbox>
	</vbox>
	</window>'
	I=$IFS; IFS=""
	for STATEMENTS in $($GTKDIALOG -p pmusic_webmusic); do
		eval $STATEMENTS
	done
	IFS=$I
	
	case $EXIT in
		install)
			xterm -hold -e wget --tries=1 --user $FTP_USER --password $FTP_PASSWORD --output-document=$HOME/.pmusic/index_webmusic_jamendo.gz "$FTP_SERVER/pmusic_index_webmusic.gz"
			gunzip $HOME/.pmusic/index_webmusic_jamendo.gz
			#turn on search-filter - off by default
			echo true > $WORKDIR/SEARCH_WEBMUSIC
			;;
		build)
			xterm -hold -e $APPDIR/func_webmusic -build_jamendo_index &
			;;
	esac
	$APPDIR/func_webmusic -webmusic &
	echo true > $WORKDIR/UPDATE_SOURCELIST2
	;;
esac
	