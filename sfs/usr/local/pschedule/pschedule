#! /bin/bash
#Pschedule
#Copyright 2007,2008,2009,2010,2011
#Sigmund Berglund

#------------------------------
#Pschedule is released under the GNU General Public License (GPL). You have the right to use and modify this software in any way you like, so long as any derivative works remain under a GPL license.
    
#This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.
#See the GNU General Public License homepage for more details. <http://www.gnu.org/licenses/>.
#------------------------------

VERSION="1.0.2"
export PROGPATH="/usr/local/pschedule"
export BROWSER="defaultbrowser"

#parameters
while [ $# != 0 ]; do
	I=1
	while [ $I -le `echo $# | wc -c` ]; do #check -xft
		case $1 in
			-e) MODE='-edit';;
			-s) SILENT=true;;
			-v|--version) echo Pschedule $VERSION; exit;;
			-h|--help) echo '
Usage: pschedule [Options(s)] [Command] [Task Name]

Options
  -e                Edit given command
  -h | --help       Show this help message
  -s                Do not show main window. Go straight to task editor
  -v | --version    Show Pschedule version'; exit;;
			*) 	export TASK="$1"; export TASKNAME="$2"
				shift; shift; break; break;;
		esac
		shift
		I=$[$I+1]
	done
done

#set language
LANGUAGE="`ls -1 $PROGPATH/locals/ | grep ${LANG%.*}`"
#fallback to macrolanguage if available (ISO 639-1 two letter code: en, es, fr, etc.)
[ -z $LANGUAGE ] && LANGUAGE="`ls -1 $PROGPATH/locals/ | grep ${LANG%_*}`"
. $PROGPATH/locals/en_US:english #always run to fill gaps in translation
if [ "$LANGUAGE" != "en_US:english" ] && [ "$LANGUAGE" ] && [ -s $PROGPATH/locals/$LANGUAGE ]; then . $PROGPATH/locals/$LANGUAGE; fi

#cron check
if [ ! -f $HOME/Startup/cron-check ]; then
	#include a link to crond in ~/Startup for autostart cron daemon at boot
	mkdir $HOME/Startup  > /dev/null 2>&1
	echo '
TMP=`ps -e`
TMP2=`echo "$TMP" | grep " cron"`
if [ -z "$TMP2" ]; then #cron is not running
	crond
fi' > $HOME/Startup/cron-check
	chmod 700 $HOME/Startup/cron-check
	#---
	killall -q crond; crond #restart cron
	#Did these really happen. Do user has permission.
	TMP=`ps -e`; TMP=`echo "$TMP" | grep " cron"`
	if [ -z "$TMP" ]; then #cron is not running
		FRAME="Error"; TXT2="Cron deamon is not running. You need root-access to start cron"; IMG="dialog-error"
		. "$PROGPATH"/box_ok
	fi
fi
#build treeitems for 'Add task' --- better have the delay at startup
COUNT=0; ITEMS_HOUR="$ITEMS_HOUR<item>$any</item>"
while [ $COUNT -lt 24 ]; do
	if [ $COUNT -lt 10 ]; then COUNT=0"$COUNT"; fi #always 02 digits
	export ITEMS_HOUR="$ITEMS_HOUR<item>$COUNT</item>"
	COUNT=`echo "$COUNT + 1" | bc`
done
COUNT=0; ITEMS_MINUTE="$ITEMS_MINUTE<item>$any</item>"
while [ $COUNT -lt 60 ]; do
	if [ $COUNT -lt 10 ]; then COUNT=0"$COUNT"; fi #always 02 digits
	export ITEMS_MINUTE="$ITEMS_MINUTE<item>$COUNT</item>"
	COUNT=`echo "$COUNT + 1" | bc`
done
COUNT=1; ITEMS_DAY="$ITEMS_DAY<item>$any</item>"
while [ $COUNT -lt 32 ]; do
	export ITEMS_DAY="$ITEMS_DAY<item>$COUNT.</item>"
	COUNT=`echo "$COUNT + 1" | bc`
done
export ITEMS_WEEKDAY="$ITEMS_WEEKDAY
<item>$any</item>
<item>$Mondays</item>
<item>$Tuesdays</item>
<item>$Wednesdays</item>
<item>$Thursdays</item>
<item>$Fridays</item>
<item>$Saturdays</item>
<item>$Sundays</item>"
export ITEMS_MONTH="$ITEMS_MONTH
<item>$any</item>
<item>$January</item>
<item>$February</item>
<item>$March</item>
<item>$April</item>
<item>$May</item>
<item>$June</item>
<item>$July</item>
<item>$August</item>
<item>$September</item>
<item>$October</item>
<item>$November</item>
<item>$December</item>"
#---

export about="
<window title=\"Pschedule - about\">
 <notebook labels=\"About|License|Credits\">
  <frame>
   <text><label>\"\"</label></text>
   <text use-markup=\"true\"><label>\"<b><span size='"'x-large'"'>Pschedule</span> $VERSION</b>\"</label></text>
   <text use-markup=\"true\"><label>Sigmund Berglund, Copyright 2007-2011</label></text>
   <text><label>\"\"</label></text>
   <button>
    <label>\"http://www.murga-linux.com/puppy/viewtopic.php?t=22166\"</label>
    <action>$BROWSER http:\/\/www.murga-linux.com/puppy/viewtopic.php?t=22166 &</action>
   </button>
  </frame>
  <frame>
   <text use-markup=\"true\"><label>\"Pschedule is released under the <b>GNU General Public License</b> (GPL). You have the right to use and modify this software in any way you like, so long as any derivative works remain under a GPL license.\"</label></text>
   <text use-markup=\"true\"><label>\"This program is distributed in the hope that it will be useful, but <b><span color='"'red'"'>WITHOUT ANY WARRANTY</span></b>. See the GNU General Public License homepage for more details.\"</label></text>
   <hbox>
    <button label=\"http://www.gnu.org/licenses/\"><action>$BROWSER http:\/\/www.gnu.org\/licenses\/</action></button>
   </hbox>
  </frame>
  <frame>
   <edit><default>\"Translators:
  French - (etiennep)
  Norwegian - Sigmund Berglund (zigbert)
  Polish - Robert Wojew√≥dzki (robwoj44)
  Spanish - Gustavo Yzaguirre (GustavoYz) 

Others:
  jake_take for improvements.
  HairyWill for advanced bash help.
  mcewanw for cli options
\"</default></edit>
  </frame>
 </notebook>
</window>"

export pschedule='
<window title="Pschedule '$VERSION' - '$Task_on_time'">
 <vbox>
  <hbox homogeneous="true">
  <hbox>
   <button>
    <variable>BUTTON_ADD</variable>
    <label>'$Add'</label>
    <input file stock="gtk-add"></input>
    <action>. '$PROGPATH'/func_new</action> 
    <action>. '$PROGPATH'/func_cron_to_human</action>
    <action>refresh:TREE</action>
   </button>
   <text width-request="30"><label>""</label></text>
   <button>
    <variable>BUTTON_EDIT</variable>
    <label>'$Edit'</label>
    <input file stock="gtk-edit"></input>
    <visible>disabled</visible>
    <action>. '$PROGPATH'/func_new -edit</action>
    <action>. '$PROGPATH'/func_cron_to_human</action>
    <action>refresh:TREE</action>
   </button>
   <button>
    <variable>BUTTON_DEL</variable>
    <label>'$Delete'</label>
    <input file stock="gtk-delete"></input>
    <visible>disabled</visible>
    <action>. '$PROGPATH'/func_delete</action>
    <action>. '$PROGPATH'/func_cron_to_human</action>
    <action>refresh:TREE</action>
   </button>
   <button>
    <variable>BUTTON_RUN</variable>
    <label>'$Run'</label>
    <input file stock="gtk-execute"></input>
    <visible>disabled</visible>
    <action>. '$PROGPATH'/func_run</action>
   </button>
  </hbox>
  </hbox>
  
  <tree rules_hint="true" exported_column="0">
   <width>500</width><height>200</height>
   <label>"'$Task'|'$Schedule'|'$Cron_command'"</label>
   <variable>TREE</variable>
   <input>cat /tmp/pschedule-treeitems</input>
   <action signal="button-release-event">enable:BUTTON_DEL</action>
   <action signal="button-release-event">enable:BUTTON_EDIT</action>
   <action signal="button-release-event">enable:BUTTON_RUN</action>
  </tree>
  <hbox>
   <button tooltip-text="'$About'">
    <input file stock="gtk-about"></input>
    <action>launch:about</action>
   </button>
   <button tooltip-text="'$Quit'">
    <input file stock="gtk-quit"></input>
    <action type="exit">EXIT</action>
   </button>
  </hbox>

 </vbox>
</window>'

. $PROGPATH/func_cron_to_human

[ "$SILENT" ] && export TREE="$TASK" #no tree with no gui.
[ "$TASK" ] && . $PROGPATH/func_new "$MODE" "$TASK" "$TASKNAME" &

if [ ! "$SILENT" ]; then
	I=$IFS; IFS=""
	for STATEMENTS in  $(gtkdialog3 -p pschedule); do
		eval $STATEMENTS
	done
	IFS=$I
	case $EXIT in
		*)	rm /tmp/pschedule*
			exit;;
	esac
fi
