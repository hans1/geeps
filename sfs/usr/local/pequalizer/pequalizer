#!/bin/bash
#pEqualizer

 #*      This program is free software; you can redistribute it and/or modify
 #*      it under the terms of the GNU General Public License as published by
 #*      the Free Software Foundation; either version 2 of the License, or
 #*      (at your option) any later version.
 #*      
 #*      This program is distributed in the hope that it will be useful,
 #*      but WITHOUT ANY WARRANTY; without even the implied warranty of
 #*      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 #*      GNU General Public License for more details.
 #*      
 #*      You should have received a copy of the GNU General Public License
 #*      along with this program; if not, write to the Free Software
 #*      Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 #*      MA 02110-1301, USA.
 #*      
 #*/	SEE /usr/share/doc/legal
 
 #version 0.1   20110627 (c) 01micko@gmail.com and zigbert@murglinux.com 2011-2012
 #version 0.1.1 20110628 added presets
 #version 0.1.3 20110101 new pixmaps, coding improvements
 #version 0.2.0 20110724 using vscale widgets 
 #version 0.3.0 20110909 multiuser and arecord friendly
 #version 0.4.0 20111231 set resizable="false", add window icon, set freq font to mono
  
#depends on alsaequal

#fields '01. 31 Hz' '02. 63 Hz' '03. 125 Hz' '04. 250 Hz' '05. 500 Hz' 
#\\\\\\ '06. 1 kHz' '07. 2 kHz' '08. 4 kHz' '09. 8 kHz' '10. 16 kHz'  ///these are the freq fields for alsaequal///
#set -x #debug remove
#enable alsaequal
[ ! -f $HOME/.asoundrc.bak ] && \
cat > $HOME/.asoundrc.bak << _EQ
 ctl.equal {
  type equal;
}

pcm.plugequal {
  type equal;
  # Modify the line below if you don't
  # want to use sound card 0.
  #slave.pcm "plughw:0,0";
  # or if you want to use with multiple applications output to dmix
  slave.pcm "plug:dmix"
}

#pcm.equal {
  # Or if you want the equalizer to be your
  # default soundcard uncomment the following
  # line and comment the above line.
pcm.!default {
  type plug;
  slave.pcm plugequal;
}
_EQ
mv -f $HOME/.asoundrc.bak $HOME/.asoundrc

#setup working dirs
mkdir /tmp/eq 2> /dev/null
[ ! -d $HOME/.pequalizer/preset ] && mkdir -p $HOME/.pequalizer/preset
export CONFDIR="$HOME/.pequalizer"
#create config
[ ! -f $HOME/.pequalizer/pequalizerrc ] && \
echo '#pEqualizer config
export PRESET=Flat' > $HOME/.pequalizer/pequalizerrc
#create presets
[ ! -f $CONFDIR/preset/Flat ] && \
cat > $CONFDIR/preset/Flat << _FLAT
#values
VAL1=65
VAL2=65
VAL3=65
VAL4=65
VAL5=65
VAL6=65
VAL7=65
VAL8=65
VAL9=65
VAL10=65
_FLAT
[ ! -f $CONFDIR/preset/Jazz ] && \
cat > $CONFDIR/preset/Jazz << _JAZZ
#values
VAL1=53
VAL2=42
VAL3=54
VAL4=58
VAL5=63
VAL6=68
VAL7=74
VAL8=79
VAL9=89
VAL10=79
_JAZZ
[ ! -f $CONFDIR/preset/Pop ] && \
cat > $CONFDIR/preset/Pop << _POP
#values
VAL1=78
VAL2=67
VAL3=64
VAL4=53
VAL5=53
VAL6=53
VAL7=59
VAL8=64
VAL9=74
VAL10=74
_POP
[ ! -f $CONFDIR/preset/Rock ] && \
cat > $CONFDIR/preset/Rock << _ROCK
#values
VAL1=68
VAL2=52
VAL3=59
VAL4=63
VAL5=68
VAL6=68
VAL7=69
VAL8=64
VAL9=54
VAL10=54
_ROCK

#read config
. $HOME/.pequalizer/pequalizerrc

#parameters
while [ $# != 0 ]; do
	I=1
	while [ $I -lt `echo $# | wc -c` ]; do
		case $1 in
			-e)	EMBEDDED=true;;
			-h|--help)
				echo 'pEqualizer
  -e    Run embedded - gtkdialog code is pointed to stdout
  -h    Show this help message'
				exit;;
		esac
		shift
		I=$(($I+1))
	done
done

#get/set initial values
/usr/local/pequalizer/func -getcurrent
. /tmp/eq/valuesrc 
/usr/local/pequalizer/func -links
. /usr/local/pequalizer/func -gui

#build base gui as shown embedded 
GUI_EMBEDDED='
<vbox>
 <hbox>
 '$SCALES'
 </hbox>
 <hseparator></hseparator>
  <hbox>
   <button tooltip-text="Delete preset">
    <input file stock="gtk-delete"></input>
    <action>/usr/local/pequalizer/func -delete</action>
    <action>refresh:PRESET</action>
   </button>
   <button tooltip-text="Save custom preset">
    <input file stock="gtk-save"></input>
    <action>/usr/local/pequalizer/func -save</action>
    <action>refresh:PRESET</action>
   </button>
   <comboboxentry>
    <variable>PRESET</variable>
    <default>'$PRESET'</default>
    <input>ls -1 '$HOME'/.pequalizer/preset/</input>
    <action>/usr/local/pequalizer/func -preset</action>
    <action>refresh:SLIDER1</action>
    <action>refresh:SLIDER2</action>
    <action>refresh:SLIDER3</action>
    <action>refresh:SLIDER4</action>
    <action>refresh:SLIDER5</action>
    <action>refresh:SLIDER6</action>
    <action>refresh:SLIDER7</action>
    <action>refresh:SLIDER8</action>
    <action>refresh:SLIDER9</action>
    <action>refresh:SLIDER10</action>
   </comboboxentry>
  </hbox>
</vbox>'

if [ "$EMBEDDED" = "true" ]; then
	echo "$GUI_EMBEDDED"
	exit
fi

#show standalone gui
export EQ='
<window title="pEqualizer" icon-name="eq" width-request="340" resizable="false">
<vbox>
 '$GUI_EMBEDDED'
## <hbox>
##  <button cancel></button>
## </hbox>
</vbox>
</window>'

export pequalizer="`echo "$EQ" | sed 's/##.*//'`" #I use double hash (##) for comments. --> as #FF0000
I=$IFS; IFS="" 
for STATEMENTS in  $(gtkdialog4 -p pequalizer); do 
	eval $STATEMENTS
done
IFS=$I

#cleanup -- could be in use as embedded code #new, disable $HOME/.asoundrc
#disable alsaequal on close
case $EXIT in *)mv -f $HOME/.asoundrc $HOME/.asoundrc.bak ;; esac
#end
